public class Graph.BuildCallGraph extends java.lang.Object
{
    public static final java.lang.String className;
    public static final java.lang.String methodName;

    public void <init>()
    {
        Graph.BuildCallGraph r0;

        r0 := @this: Graph.BuildCallGraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <Config.SootConfig: void setupSoot(java.lang.String)>("Demo.CGDemo");

        staticinvoke <Graph.BuildCallGraph: void buildCG()>();

        return;
    }

    public static void buildCG() throws java.lang.Exception
    {
        soot.Scene $r0;
        soot.SootClass r1;
        soot.SootMethod r2, r36, r44;
        java.util.ArrayList $r3, $r7;
        java.util.LinkedHashMap $r5, $r37;
        boolean $z1, $z2, $z3, $z4, $z6, $z7;
        java.util.Set $r9, $r15;
        soot.PackManager $r10;
        java.lang.Object $r11, $r12, $r16, $r20, $r23, $r26, $r30, $r32, $r35;
        Utils.CallInfo $r13, $r41;
        java.util.Map $r14;
        java.lang.StringBuilder $r17, $r19, $r21, $r22, $r24, $r25, $r27, $r28;
        java.io.PrintStream $r18;
        java.lang.String $r29;
        java.util.List r33, r45;
        java.util.Iterator r34, r46, r48, r50;
        int $i0;
        java.lang.Integer $r39;
        soot.jimple.Stmt r47;
        java.util.Map$Entry r49, r51;

        $r0 = staticinvoke <soot.Scene: soot.Scene v()>();

        r1 = virtualinvoke $r0.<soot.Scene: soot.SootClass getSootClass(java.lang.String)>("Demo.CGDemo");

        r2 = virtualinvoke r1.<soot.SootClass: soot.SootMethod getMethodByName(java.lang.String)>("begin");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label01:
        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label06;

        $r30 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r44 = (soot.SootMethod) $r30;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        $z4 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>(r44);

        if $z4 != 0 goto label05;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r44);

        r45 = staticinvoke <Graph.BuildCallGraph: java.util.List getCallSite(soot.SootMethod)>(r44);

        r46 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label05;

        $r32 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (soot.jimple.Stmt) $r32;

        r33 = staticinvoke <Graph.BuildCallGraph: java.util.List findtargetMethods(soot.jimple.Stmt)>(r47);

        r34 = interfaceinvoke r33.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        $r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r36 = (soot.SootMethod) $r35;

        $r37 = new java.util.LinkedHashMap;

        specialinvoke $r37.<java.util.LinkedHashMap: void <init>()>();

        $i0 = interfaceinvoke r47.<soot.jimple.Stmt: int getJavaSourceStartLineNumber()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, $r39);

        $r41 = new Utils.CallInfo;

        specialinvoke $r41.<Utils.CallInfo: void <init>(java.util.Map,soot.jimple.Stmt)>($r37, r47);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r36);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r36);

        goto label03;

     label04:
        goto label02;

     label05:
        goto label01;

     label06:
        $r9 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r48 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r11 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r49.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (Utils.CallInfo) $r12;

        $r14 = $r13.<Utils.CallInfo: java.util.Map info>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        r50 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r16 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.util.Map$Entry) $r16;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{RESULT} : { (Location : ");

        $r20 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") : ");

        $r23 = interfaceinvoke r51.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -invoke-> ");

        $r26 = interfaceinvoke r49.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r29);

        goto label08;

     label09:
        goto label07;

     label10:
        $r10 = staticinvoke <soot.PackManager: soot.PackManager v()>();

        virtualinvoke $r10.<soot.PackManager: void writeOutput()>();

        return;
    }

    public static java.util.List getCallSite(soot.SootMethod) throws java.lang.Exception
    {
        soot.SootMethod r2;
        boolean $z0, $z1, $z2;
        soot.Body $r3, $r15;
        java.util.Iterator r6;
        java.lang.Object $r7;
        soot.Unit r8;
        soot.jimple.Stmt r9;
        java.lang.Exception $r10;
        soot.jimple.JimpleBody r11;
        java.util.ArrayList $r13;
        soot.toolkits.graph.BriefUnitGraph $r14;

        r2 := @parameter0: soot.SootMethod;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke r2.<soot.SootMethod: boolean isConcrete()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r2.<soot.SootMethod: soot.Body retrieveActiveBody()>();

        r11 = (soot.jimple.JimpleBody) $r3;

        $r14 = new soot.toolkits.graph.BriefUnitGraph;

        $r15 = (soot.Body) r11;

        specialinvoke $r14.<soot.toolkits.graph.BriefUnitGraph: void <init>(soot.Body)>($r15);

        r6 = virtualinvoke $r14.<soot.toolkits.graph.BriefUnitGraph: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (soot.Unit) $r7;

        r9 = (soot.jimple.Stmt) r8;

        $z2 = interfaceinvoke r9.<soot.jimple.Stmt: boolean containsInvokeExpr()>();

        if $z2 == 0 goto label3;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r9);

     label3:
        goto label2;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        throw $r10;

     label6:
        return $r13;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static java.util.List findtargetMethods(soot.jimple.Stmt)
    {
        soot.jimple.Stmt r2;
        soot.jimple.InvokeExpr $r3, $r6;
        soot.SootMethod $r4;
        java.lang.String r5;
        java.util.ArrayList $r8;
        Graph.BuildCallGraph$1 $r9;
        soot.util.Switch $r10;

        r2 := @parameter0: soot.jimple.Stmt;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r2.<soot.jimple.Stmt: soot.jimple.InvokeExpr getInvokeExpr()>();

        $r4 = interfaceinvoke $r3.<soot.jimple.InvokeExpr: soot.SootMethod getMethod()>();

        r5 = virtualinvoke $r4.<soot.SootMethod: java.lang.String getSubSignature()>();

        $r6 = interfaceinvoke r2.<soot.jimple.Stmt: soot.jimple.InvokeExpr getInvokeExpr()>();

        $r9 = new Graph.BuildCallGraph$1;

        specialinvoke $r9.<Graph.BuildCallGraph$1: void <init>(java.util.List,java.lang.String)>($r8, r5);

        $r10 = (soot.util.Switch) $r9;

        interfaceinvoke $r6.<soot.jimple.InvokeExpr: void apply(soot.util.Switch)>($r10);

        return $r8;
    }

    public static soot.SootMethod Dispatch(soot.SootClass, java.lang.String)
    {
        soot.SootClass r0, $r6;
        java.util.List r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r4, $r5, r7, $r10, $r12;
        java.lang.Object $r9, $r11;
        java.util.Iterator r13, r15;
        soot.SootMethod r14, r16;

        r0 := @parameter0: soot.SootClass;

        r7 := @parameter1: java.lang.String;

        r1 = virtualinvoke r0.<soot.SootClass: java.util.List getMethods()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r13 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (soot.SootMethod) $r11;

        $r12 = virtualinvoke r14.<soot.SootMethod: java.lang.String getSubSignature()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        r15 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (soot.SootMethod) $r9;

        $z3 = virtualinvoke r16.<soot.SootMethod: boolean isConcrete()>();

        if $z3 == 0 goto label4;

        $r10 = virtualinvoke r16.<soot.SootMethod: java.lang.String getSubSignature()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z4 == 0 goto label4;

        return r16;

     label4:
        goto label3;

     label5:
        $r4 = "java.lang.Object";

        $r5 = virtualinvoke r0.<soot.SootClass: java.lang.String getName()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label6;

        return null;

     label6:
        $r6 = virtualinvoke r0.<soot.SootClass: soot.SootClass getSuperclassUnsafe()>();

        staticinvoke <Graph.BuildCallGraph: soot.SootMethod Dispatch(soot.SootClass,java.lang.String)>($r6, r7);

        return null;
    }

    public static void <clinit>()
    {
        <Graph.BuildCallGraph: java.lang.String methodName> = "begin";

        <Graph.BuildCallGraph: java.lang.String className> = "Demo.CGDemo";

        return;
    }
}
