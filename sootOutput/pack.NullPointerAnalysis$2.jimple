class pack.NullPointerAnalysis$2 extends soot.jimple.AbstractStmtSwitch
{
    final flowsets.NullPointerFlowSet val$inSet;
    final flowsets.NullPointerFlowSet val$outSet;
    final pack.NullPointerAnalysis this$0;

    void <init>(pack.NullPointerAnalysis, flowsets.NullPointerFlowSet, flowsets.NullPointerFlowSet)
    {
        pack.NullPointerAnalysis$2 this;
        pack.NullPointerAnalysis this$0;
        flowsets.NullPointerFlowSet l2, l3;

        this := @this: pack.NullPointerAnalysis$2;

        this$0 := @parameter0: pack.NullPointerAnalysis;

        l2 := @parameter1: flowsets.NullPointerFlowSet;

        l3 := @parameter2: flowsets.NullPointerFlowSet;

        this.<pack.NullPointerAnalysis$2: pack.NullPointerAnalysis this$0> = this$0;

        this.<pack.NullPointerAnalysis$2: flowsets.NullPointerFlowSet val$inSet> = l2;

        this.<pack.NullPointerAnalysis$2: flowsets.NullPointerFlowSet val$outSet> = l3;

        specialinvoke this.<soot.jimple.AbstractStmtSwitch: void <init>()>();

        return;
    }

    public void caseAssignStmt(soot.jimple.AssignStmt)
    {
        soot.jimple.AssignStmt stmt;
        soot.Value $stack3, $stack4;
        soot.Local leftOp;
        pack.NullPointerAnalysis$2 this;
        pack.NullPointerAnalysis$2$1 $u0;
        soot.util.Switch $r0;

        this := @this: pack.NullPointerAnalysis$2;

        stmt := @parameter0: soot.jimple.AssignStmt;

        $stack3 = interfaceinvoke stmt.<soot.jimple.AssignStmt: soot.Value getLeftOp()>();

        leftOp = (soot.Local) $stack3;

        $stack4 = interfaceinvoke stmt.<soot.jimple.AssignStmt: soot.Value getRightOp()>();

        $u0 = new pack.NullPointerAnalysis$2$1;

        specialinvoke $u0.<pack.NullPointerAnalysis$2$1: void <init>(pack.NullPointerAnalysis$2,soot.Local)>(this, leftOp);

        $r0 = (soot.util.Switch) $u0;

        interfaceinvoke $stack4.<soot.Value: void apply(soot.util.Switch)>($r0);

        return;
    }

    public void caseIdentityStmt(soot.jimple.IdentityStmt)
    {
        soot.jimple.IdentityStmt stmt;
        soot.Value $stack3, $stack7;
        soot.Local leftOp;
        pack.NullPointerAnalysis$2 this;
        pack.NullPointerAnalysis $stack4;
        pack.NullPointerAnalysis$AnalysisMode $stack5, $stack6;
        boolean $stack8;
        flowsets.NullPointerFlowSet $stack9;

        this := @this: pack.NullPointerAnalysis$2;

        stmt := @parameter0: soot.jimple.IdentityStmt;

        $stack3 = interfaceinvoke stmt.<soot.jimple.IdentityStmt: soot.Value getLeftOp()>();

        leftOp = (soot.Local) $stack3;

        $stack4 = this.<pack.NullPointerAnalysis$2: pack.NullPointerAnalysis this$0>;

        $stack6 = $stack4.<pack.NullPointerAnalysis: pack.NullPointerAnalysis$AnalysisMode analysisMode>;

        $stack5 = <pack.NullPointerAnalysis$AnalysisMode: pack.NullPointerAnalysis$AnalysisMode MAY_P>;

        if $stack6 != $stack5 goto label1;

        $stack7 = interfaceinvoke stmt.<soot.jimple.IdentityStmt: soot.Value getRightOp()>();

        $stack8 = $stack7 instanceof soot.jimple.ThisRef;

        if $stack8 != 0 goto label1;

        $stack9 = this.<pack.NullPointerAnalysis$2: flowsets.NullPointerFlowSet val$outSet>;

        virtualinvoke $stack9.<flowsets.NullPointerFlowSet: void add(soot.Local)>(leftOp);

     label1:
        return;
    }
}
