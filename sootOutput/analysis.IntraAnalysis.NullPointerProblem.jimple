public class analysis.IntraAnalysis.NullPointerProblem extends java.lang.Object
{
    public static java.lang.String className;

    public void <init>()
    {
        analysis.IntraAnalysis.NullPointerProblem this;

        this := @this: analysis.IntraAnalysis.NullPointerProblem;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String $stack1;
        java.lang.String[] args;

        args := @parameter0: java.lang.String[];

        $stack1 = <analysis.IntraAnalysis.NullPointerProblem: java.lang.String className>;

        staticinvoke <config.SootConfig: void setupSoot(java.lang.String)>($stack1);

        staticinvoke <analysis.IntraAnalysis.NullPointerProblem: void findNullPointer()>();

        return;
    }

    public static void findNullPointer()
    {
        soot.Scene $stack6;
        java.lang.String $stack7;
        soot.SootClass sc;
        java.util.List $stack9;
        java.util.Iterator l1;
        boolean $stack11;
        java.lang.Object $stack12;
        soot.SootMethod method;
        soot.Body $stack13, $r0;
        soot.jimple.JimpleBody body;
        soot.toolkits.graph.TrapUnitGraph unitGraph, $u0;
        java.util.ArrayList npAnalyzers, $u1;
        pack.NullPointerAnalysis$AnalysisMode $stack17, $stack20, $stack23;
        pack.NullPointerAnalysis $u2, $u3, $u4;
        soot.toolkits.graph.DirectedGraph $r1, $r2, $r3;

        $stack6 = staticinvoke <soot.Scene: soot.Scene v()>();

        $stack7 = <analysis.IntraAnalysis.NullPointerProblem: java.lang.String className>;

        sc = virtualinvoke $stack6.<soot.Scene: soot.SootClass getSootClass(java.lang.String)>($stack7);

        $stack9 = virtualinvoke sc.<soot.SootClass: java.util.List getMethods()>();

        l1 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack11 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label2;

        $stack12 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        method = (soot.SootMethod) $stack12;

        $stack13 = virtualinvoke method.<soot.SootMethod: soot.Body retrieveActiveBody()>();

        body = (soot.jimple.JimpleBody) $stack13;

        $u0 = new soot.toolkits.graph.TrapUnitGraph;

        $r0 = (soot.Body) body;

        specialinvoke $u0.<soot.toolkits.graph.TrapUnitGraph: void <init>(soot.Body)>($r0);

        unitGraph = $u0;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        npAnalyzers = $u1;

        $u2 = new pack.NullPointerAnalysis;

        $stack17 = <pack.NullPointerAnalysis$AnalysisMode: pack.NullPointerAnalysis$AnalysisMode MUST>;

        $r1 = (soot.toolkits.graph.DirectedGraph) unitGraph;

        specialinvoke $u2.<pack.NullPointerAnalysis: void <init>(soot.toolkits.graph.DirectedGraph,pack.NullPointerAnalysis$AnalysisMode)>($r1, $stack17);

        interfaceinvoke npAnalyzers.<java.util.List: boolean add(java.lang.Object)>($u2);

        $u3 = new pack.NullPointerAnalysis;

        $stack20 = <pack.NullPointerAnalysis$AnalysisMode: pack.NullPointerAnalysis$AnalysisMode MAY_O>;

        $r2 = (soot.toolkits.graph.DirectedGraph) unitGraph;

        specialinvoke $u3.<pack.NullPointerAnalysis: void <init>(soot.toolkits.graph.DirectedGraph,pack.NullPointerAnalysis$AnalysisMode)>($r2, $stack20);

        interfaceinvoke npAnalyzers.<java.util.List: boolean add(java.lang.Object)>($u3);

        $u4 = new pack.NullPointerAnalysis;

        $stack23 = <pack.NullPointerAnalysis$AnalysisMode: pack.NullPointerAnalysis$AnalysisMode MAY_P>;

        $r3 = (soot.toolkits.graph.DirectedGraph) unitGraph;

        specialinvoke $u4.<pack.NullPointerAnalysis: void <init>(soot.toolkits.graph.DirectedGraph,pack.NullPointerAnalysis$AnalysisMode)>($r3, $stack23);

        interfaceinvoke npAnalyzers.<java.util.List: boolean add(java.lang.Object)>($u4);

        staticinvoke <analysis.IntraAnalysis.NullPointerProblem: void doNullPointerAnalysis(soot.jimple.JimpleBody,java.util.List)>(body, npAnalyzers);

        goto label1;

     label2:
        return;
    }

    public static void doNullPointerAnalysis(soot.jimple.JimpleBody, java.util.List)
    {
        byte unitIndex;
        soot.jimple.JimpleBody body;
        soot.UnitPatchingChain $stack10;
        java.util.Iterator l3, l5, l8;
        boolean $stack12, $stack16, $stack20, $stack21, $stack26, $stack39, $stack44;
        java.lang.Object $stack13, $stack18, $stack41, $stack42;
        soot.Unit unit;
        java.util.List $stack14, npAnalyzers;
        soot.ValueBox useBox;
        soot.Value $stack19, $stack23, $stack37;
        soot.Type $stack24;
        soot.NullType $stack25;
        java.lang.StringBuilder $stack27, $stack29, $stack31, $stack32, $stack33, $stack34, $stack35, $stack46, $stack48, $stack50, $stack51, $stack53, $stack54, $stack55, $stack56, $stack57;
        java.io.PrintStream $stack28, $stack47;
        int $stack30, $stack49;
        java.lang.String $stack36, $stack58;
        soot.Local usedLocal;
        pack.NullPointerAnalysis npa;
        flowsets.NullPointerFlowSet $stack43;
        pack.NullPointerAnalysis$AnalysisMode $stack52;

        body := @parameter0: soot.jimple.JimpleBody;

        npAnalyzers := @parameter1: java.util.List;

        unitIndex = 0;

        $stack10 = virtualinvoke body.<soot.jimple.JimpleBody: soot.UnitPatchingChain getUnits()>();

        l3 = virtualinvoke $stack10.<soot.UnitPatchingChain: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label8;

        $stack13 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        unit = (soot.Unit) $stack13;

        $stack14 = interfaceinvoke unit.<soot.Unit: java.util.List getUseBoxes()>();

        l5 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack16 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label7;

        $stack18 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        useBox = (soot.ValueBox) $stack18;

        $stack19 = interfaceinvoke useBox.<soot.ValueBox: soot.Value getValue()>();

        $stack20 = $stack19 instanceof soot.Local;

        if $stack20 == 0 goto label5;

        $stack37 = interfaceinvoke useBox.<soot.ValueBox: soot.Value getValue()>();

        usedLocal = (soot.Local) $stack37;

        l8 = interfaceinvoke npAnalyzers.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack39 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack39 == 0 goto label5;

        $stack41 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        npa = (pack.NullPointerAnalysis) $stack41;

        $stack42 = virtualinvoke npa.<pack.NullPointerAnalysis: java.lang.Object getFlowBefore(java.lang.Object)>(unit);

        $stack43 = (flowsets.NullPointerFlowSet) $stack42;

        $stack44 = virtualinvoke $stack43.<flowsets.NullPointerFlowSet: boolean contains(soot.Local)>(usedLocal);

        if $stack44 == 0 goto label4;

        $stack47 = <java.lang.System: java.io.PrintStream out>;

        $stack46 = new java.lang.StringBuilder;

        specialinvoke $stack46.<java.lang.StringBuilder: void <init>()>();

        $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[+]Line ");

        $stack49 = interfaceinvoke unit.<soot.Unit: int getJavaSourceStartLineNumber()>();

        $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack49);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack52 = npa.<pack.NullPointerAnalysis: pack.NullPointerAnalysis$AnalysisMode analysisMode>;

        $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack52);

        $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NullPointer usage of local ");

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(usedLocal);

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in unit ");

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(unit);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack47.<java.io.PrintStream: void println(java.lang.String)>($stack58);

     label4:
        goto label3;

     label5:
        $stack21 = unit instanceof soot.jimple.InvokeStmt;

        if $stack21 == 0 goto label6;

        $stack23 = interfaceinvoke useBox.<soot.ValueBox: soot.Value getValue()>();

        $stack24 = interfaceinvoke $stack23.<soot.Value: soot.Type getType()>();

        $stack25 = staticinvoke <soot.NullType: soot.NullType v()>();

        $stack26 = virtualinvoke $stack24.<java.lang.Object: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label6;

        $stack28 = <java.lang.System: java.io.PrintStream out>;

        $stack27 = new java.lang.StringBuilder;

        specialinvoke $stack27.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[*]Line ");

        $stack30 = interfaceinvoke unit.<soot.Unit: int getJavaSourceStartLineNumber()>();

        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack30);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": MUST NullPointer usage in unit (");

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(unitIndex);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(unit);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack28.<java.io.PrintStream: void println(java.lang.String)>($stack36);

     label6:
        goto label2;

     label7:
        goto label1;

     label8:
        return;
    }

    static void <clinit>()
    {
        <analysis.IntraAnalysis.NullPointerProblem: java.lang.String className> = "Demo.NullPointerExample";

        return;
    }
}
